{"version":3,"file":"agent.service.js","sourceRoot":"","sources":["../../src/services/agent.service.ts"],"names":[],"mappings":";;;AAAA,yDAAkD;AAElD,qCAAkC;AAGlC,MAAa,YAAa,SAAQ,qBAAW;IAC3C;QACE,KAAK,EAAE,CAAC;QAEV,kBAAa,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;YACtC,IAAI;gBACF,MAAM,GAAG,GAAG,EAAE,GAAG,KAAK,EAAE,CAAC;gBACzB,IAAI,SAAS,GAAG,MAAM,OAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACtE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;oBAC1B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;iBAChD;gBACD,IAAI,MAAM,GAAG,MAAM,OAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;gBACtC,YAAY;gBACb,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,+BAA+B,EAAE,EAAE,KAAK,EAAC,MAAM,EAAE,CAAC,CAAC;aAChF;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAKF,kBAAa,GAAG,KAAK,IAAI,EAAE;YACzB,IAAI;gBACA,IAAI,MAAM,GAAG,MAAM,OAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;gBACpC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,oCAAoC,EAAE,EAAE,MAAM,EAAC,MAAM,EAAE,CAAC,CAAC;aACtF;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACL,CAAC,CAAA;IA3BC,CAAC;CA+BF;AAlCD,oCAkCC","sourcesContent":["import BaseService from \"../policies/BaseService\";\nimport { IAgent, } from \"../models/dbTypes\";\nimport { db } from \"../models/db\";\n\n\nexport class AgentService extends BaseService {\n  constructor() {\n    super();\n  }\n  registerAgent = async (agent: IAgent) => {\n    try {\n      const enc = { ...agent };\n      let userExist = await db.Agent.findOne({mobile: agent.mobile}).exec();\n      if (!this._.isNil(userExist)) {\n          throw new Error(\"Agent already registered!\");\n      }\n      let result = await db.Agent.create(enc)\n       //@ts-ignore\n      result = result.toObject();\n      return this.RESP(\"success\", \"Agent registered successfully\", { agent:result });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n\n\n  getAgentslist = async () => {\n    try {\n        let result = await db.Agent.find()\n      return this.RESP(\"success\", \"Fetched Agent details successfully\", { agents:result });\n    } catch (error) {\n      throw error;\n    }\n}\n\n\n\n}\n"]}